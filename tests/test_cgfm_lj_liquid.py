import pytest
from mscg.cli import cgfm



def test_1s(datafile):
    
    coeffs = cgfm.main(
        top     = datafile("unary_lj_fluid.top"),
        traj    = datafile("unary_lj_fluid.lammpstrj,frames=20"),
        cut     = 2.50,
        pair    = ['1,1,min=0.9,resolution=0.1'],
        verbose = 0,
        save    = 'return'
    )
    
    benchmark = [138.9631694877613, 91.82548595198736, 37.170941251396, 8.274239510050489, -1.2044398613034832, -2.7183788478145345, -2.2683098367441676, -1.5965713385228213, -1.0818547831763554, -0.717259467246318, -0.47796955504588584, -0.3158498732183334, -0.20987270266673158, -0.1361859520093368, -0.08776448922137801, -0.052583077806601486, -0.029078785840772624, -0.014884869849257272, -0.0069221125135834, -0.0021800358760337927, -6.480208702052386e-05]
    
    print(coeffs)
    print("")
    
    for i in range(20):
        diff = (coeffs[i] - benchmark[i]) / benchmark[i]
        print("X=%3d, Y0=%10.3e, Y=%10.3e, dY/Y0=%5.2f%%" %(i+1, benchmark[i], coeffs[i], diff*100))
        assert abs(diff)<0.01
    
    return



def test_96(datafile):
    
    coeffs = cgfm.main(
        top     = datafile("96_lj_liquid.top"),
        traj    = datafile("96_lj_liquid.lammpstrj,frames=20"),
        cut     = 2.50,
        pair    = ['1,1,min=0.75,resolution=0.1'],
        verbose = 0,
        save    = 'return'
    )
    
    benchmark = [69.09570187489612, 30.900808750625856, 22.88671410180678, 0.6383030167760732, 10.938030871302454, -6.968982744422503, 6.168841961292371, -6.828294153619743, 3.299158553271705, 5.171934560595647, -5.664394179532788, 2.138024887707462, -0.4212641740778478, -0.1834883807767465, 1.1642534527094335, -4.040604429569473, 4.337863308295223, -6.131961366459304, 6.275185405969851, -7.597208432558206, 4.921266744370387, -3.3338031225772333, -0.8068478314400043]
    
    print(coeffs)
    print("")
    
    for i in range(20):
        diff = (coeffs[i] - benchmark[i]) / benchmark[i]
        print("X=%3d, Y0=%10.3e, Y=%10.3e, dY/Y0=%5.2f%%" %(i+1, benchmark[i], coeffs[i], diff*100))
        assert abs(diff)<0.01
        
    return



from mscg import *
import math

def test_2s(datafile):
    
    benchmark1 = [21.643027385760174, 13.099306216648618, 7.973458172049802, 4.831602770986729, 2.88876883950334, 1.6834280116299194, 0.9354984437874433, 0.4730950587528837, 0.19009615858376822, 0.02010546265601764, -0.07864861823775499, -0.1326735521692742, -0.15880122337235048, -0.1677423054090511, -0.16640088472309636, -0.15915707111630184, -0.14867038547780176, -0.13688131603399317, -0.12464733512984302, -0.11274510096393364, -0.10143403044594507, -0.09099175034999017, -0.08143012094171165, -0.07278483928039693, -0.06496469284629222, -0.058024221905982096, -0.05180292722768502, -0.04624002178229812, -0.0413272153576315, -0.036892690450366195, -0.032995115145467206, -0.02951754380487023, -0.02643912009254603, -0.023677848734357958, -0.02122592675248012, -0.01902128032168629, -0.01704954818814068, -0.015322993691883283, -0.013763234870253842, -0.012332716382182708, -0.011065673663085408, -0.00993752870959224, -0.008922699046068896, -0.008020821814494525, -0.007164253224397348, -0.006439547497667187, -0.005753064431764676, -0.005148264948946031, -0.0045929866478571, -0.004137766902620384, -0.0036666218008234216, -0.003241187790436791, -0.002896310707206612, -0.002542881587709528, -0.0022628070037843916]
    
    benchmark2 = [29.71473789282017, 17.599813442560254, 10.475809156562548, 6.224138875876711, 3.664604696477806, 2.114749963488901, 1.1741141672770725, 0.6043536054605073, 0.26191543098729886, 0.05946881589226531, -0.056610721257943954, -0.11956072345054213, -0.1500271540230271, -0.16088585961671792, -0.1602204034533903, -0.15310240256967358, -0.142574367714386, -0.13061243090579605, -0.11830594428739855, -0.10637359185801756, -0.09520342668404477, -0.08480455974197007, -0.07550778221937712, -0.06709156213741284, -0.05957390772923098, -0.0529105574880777, -0.04702768645464554, -0.04178705797378559, -0.0371523759008629, -0.03306250465961963, -0.029448285451312544, -0.026244316781560095, -0.023447719835146225, -0.020907636489500538, -0.01869573420398065, -0.016720474918944916, -0.014941994946510643, -0.013378090362029174, -0.011981625280837646, -0.010727005419046445, -0.00957940048432836, -0.0086343954738295, -0.00770957088298517, -0.0069087666160444995, -0.006189089938868383, -0.005550119405068184, -0.004952080500596499, -0.0044462173579474275, -0.003944752037169668, -0.003514725632678066, -0.0031368549261555105, -0.0027787359720939384, -0.002463803406028934, -0.002180990707918173, -0.001924237511886678, -0.0016778758036215353, -0.0014839283894229902]
    
    benchmark3 = [25.311878540645914, 14.659281957445097, 8.514486898753333, 4.924459276000165, 2.808856680856449, 1.5559754539127322, 0.8137670360777456, 0.37609688691093024, 0.12141297228020675, -0.02294952148201162, -0.10085596920451396, -0.13904373147325297, -0.15362916459099796, -0.1546289526179818, -0.14812814091365029, -0.13774504303590895, -0.12571352771072308, -0.11335905009310004, -0.10134286849591737, -0.09017778455340932, -0.0799515450398168, -0.07067612442834127, -0.062445646637014574, -0.055190764111901096, -0.048684323698326364, -0.0430337001782245, -0.0380376231066836, -0.033691060991799276, -0.02982229332489399, -0.02645176500429835, -0.02348107539773241, -0.020879542665799458, -0.0185819578876117, -0.016542946446186663, -0.014763136913804816, -0.013160185037954526, -0.011753308188774923, -0.010521324499702393, -0.009361985186284245, -0.00841789086573384, -0.007513831175558528, -0.006736927483153412, -0.006023574414347646, -0.0053922044071392705, -0.00480506438897563, -0.004295449292118799, -0.0038179252533482293, -0.0034130197624131896, -0.003043535510890798, -0.002703086291920601, -0.0024139182624654414, -0.0021574197953954863, -0.0018367741088596524, -0.0016431149717000125, -0.0014445039312478826, -0.0012850365751170872, -0.0011224892990170771, -0.000995952393303214, -0.0008497770337999819]
    
    
    
    coeffs = cgfm.main(
        top     = datafile("binary_lj_fluid.top"),
        traj    = datafile("binary_lj_fluid.lammpstrj,frames=1000"),
        cut     = 8.50,
        pair    = ['1,1,min=2.9,resolution=0.1', '1,2,min=2.7,resolution=0.1', '2,2,min=2.6,resolution=0.1'],
        verbose = 0,
        save    = 'return'
    )
    
    order, dx, xmin, xmax = 6, 0.1, 2.9, 8.5
    
    sp = BSpline(order, dx, xmin, xmax)
    n = math.floor((xmax - xmin)/dx)
    F = sp.interpolate(xmin, dx, n, coeffs[:61])
        
    print("\nTable 1_1")
    
    for i in range(20):
        diff = (F[i] - benchmark1[i]) / benchmark1[i]
        print("X=%3d, Y0=%10.3e, Y=%10.3e, dY/Y0=%5.2f%%" %(i+1, benchmark1[i], F[i], diff*100))
        assert abs(diff)<0.01
    
    
    xmin = 2.7
    sp = BSpline(order, dx, xmin, xmax)
    n = math.floor((xmax - xmin)/dx)
    F = sp.interpolate(xmin, dx, n, coeffs[61:124])
            
    print("\nTable 1_2")
    
    for i in range(20):
        diff = (F[i] - benchmark2[i]) / benchmark2[i]
        print("X=%3d, Y0=%10.3e, Y=%10.3e, dY/Y0=%5.2f%%" %(i+1, benchmark2[i], F[i], diff*100))
        assert abs(diff)<0.01
    
    
    xmin = 2.6
    sp = BSpline(order, dx, xmin, xmax)
    n = math.floor((xmax - xmin)/dx)
    F = sp.interpolate(xmin, dx, n, coeffs[124:])
    
    print("\nTable 2_2")
    
    for i in range(20):
        diff = (F[i] - benchmark3[i]) / benchmark3[i]
        print("X=%3d, Y0=%10.3e, Y=%10.3e, dY/Y0=%5.2f%%" %(i+1, benchmark3[i], F[i], diff*100))
        assert abs(diff)<0.01