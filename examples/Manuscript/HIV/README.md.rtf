{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red35\green35\blue35;\red255\green255\blue255;\red107\green0\blue109;
}
{\*\expandedcolortbl;;\cssrgb\c18039\c18039\c18039;\cssrgb\c100000\c100000\c100000;\cssrgb\c50196\c0\c50196;
}
\margl1440\margr1440\vieww50700\viewh27940\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #######################################################################\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### The following is a step-by-step tutorial on how to prepare
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### a bottom-up CG protein model (example: HIV-1 CASP1 protein)
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### Created by Alex Pak (Colorado School of Mines, Aug 2023)
\f0\b0 \cf2 \cb1 \strokec2 \
\

\f1\b \cf4 \cb3 \strokec4 #### CG workflow tested using:
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### openmscg 0.7.1 (see note below)
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### numpy 1.24.3
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### scikit-learn 1.2.2
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### scipy 1.10.1
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 #######################################################################\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### In each of the following folders, you will see
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### - inputs - contains all the input files needed for the process
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### - outputs - contains the outputs of "run_me.bash" 
\f0\b0 \cf2 \cb1 \strokec2 \
\

\f1\b \cf4 \cb3 \strokec4 #### Step 0 - AAMD ####
\f0\b0 \cf2 \strokec2  \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part0_aamd\cb1 \
\cb3 ````\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### look in part0_aamd to see the final AAMD trajectory+topology files
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### - merge.trr - protein trajectory of 18-mer
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### - protein.pdb - PDB file of 18-mer
\f0\b0 \cf2 \cb1 \strokec2 \
\

\f1\b \cf4 \cb3 \strokec4 #### Step 1 - EDCG (mapping) ####
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part1_edcg\cb1 \
\cb3 ````\cb1 \
\cb3 cd part1_edcg\cb1 \
\cb3 bash run_me.bash\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### Step 2 - hENM (intra-protein bond network) ####
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part2_henm\cb1 \
\cb3 ````\cb1 \
\cb3 cd ../part2_henm\cb1 \
\cb3 bash run_me.bash\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### Step 3 - Analyze CG-mapped AAMD traj ####
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part3_aa_analysis\cb1 \
\cb3 ````\cb1 \
\cb3 cd ../part3_aa_analysis\cb1 \
\cb3 bash run_me.bash\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### Step 4 - REM (inter-protein interactions) ####
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part4_rem\cb1 \
\cb3 ````\cb1 \
\cb3 cd ../part4_rem\cb1 \
\cb3 bash run_me.bash\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### Step 5 - Compare CG vs AA traj ####
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 ````\cb1 \
\cb3 Download: wget --no-check-certificate https://software.rcc.uchicago.edu/mscg/downloads/openmscg-examples/Manuscript/HIV/part5_analysis\cb1 \
\cb3 ````\cb1 \
\cb3 cd ../part5_analysis\cb1 \
\cb3 bash run_me.bash\cb1 \
\
\cb3 #######################################################################\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b \cf4 \cb3 \strokec4 #### NOTE :
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### I modified cgib to handle detection of pairs with zero
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### data (pair distances) within the given cutoff distance
\f0\b0 \cf2 \cb1 \strokec2 \

\f1\b \cf4 \cb3 \strokec4 #### (the modified code is in this directory)
\f0\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 #######################################################################\cb1 \
\
}